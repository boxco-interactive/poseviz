import time

import poseviz
import numpy as np

# join names, 0 to 32 for 33 joints
joint_names = list(range(33))
joint_names = [str(join) for join in joint_names]

# joint edges, defining a skeleton
joint_edges = [
            [0, 1],
            [1, 2],
            [2, 3],
            [3, 7],
            [0, 4],
            [4, 5],
            [5, 6],
            [6, 8],
            [10, 9],
            [12, 11],
            [11, 13],
            [12, 14],
            [13, 15],
            [15, 21],
            [15, 17],
            [15, 19],
            [17, 19],
            [11, 23],
            [23, 25],
            [25, 27],
            [27, 29],
            [27, 31],
            [29, 31],
            [24, 23],
            [14, 16],
            [16, 22],
            [16, 18],
            [16, 20],
            [18, 20],
            [12, 24],
            [24, 26],
            [26, 28],
            [28, 32],
            [28, 30],
            [32, 30]
            ]

test_pose_1 = np.array([[[ 0.70789921,  0.5376159 , -1.21586466],
        [ 0.73370695,  0.47686881, -1.15251529],
        [ 0.74539423,  0.47609288, -1.15251529],
        [ 0.75694233,  0.47391558, -1.15251529],
        [ 0.69493908,  0.46488017, -1.22586727],
        [ 0.67846203,  0.45459634, -1.22586727],
        [ 0.66127586,  0.44225425, -1.22475588],
        [ 0.75436652,  0.47204256, -0.72851855],
        [ 0.60321856,  0.4147293 , -1.0691607 ],
        [ 0.70649511,  0.59459633, -1.04415441],
        [ 0.66270745,  0.58951133, -1.14251268],
        [ 0.74508369,  0.68852329, -0.38065234],
        [ 0.37459624,  0.67323345, -0.90245169],
        [ 0.76427543,  1.05145109, -0.13642357],
        [ 0.30076939,  1.04356384, -0.87911242],
        [ 0.75935084,  1.33810687, -0.28701741],
        [ 0.27703118,  1.42173612, -0.80687177],
        [ 0.77538067,  1.43640482, -0.3081339 ],
        [ 0.24440221,  1.52314413, -0.85355031],
        [ 0.74532956,  1.44394422, -0.38370866],
        [ 0.28811115,  1.53927886, -0.92356813],
        [ 0.73022789,  1.40799987, -0.32925037],
        [ 0.30399692,  1.49747872, -0.83687943],
        [ 0.62697178,  1.36660528,  0.17226602],
        [ 0.40874234,  1.36389327, -0.1664312 ],
        [ 0.6169228 ,  1.91141403,  0.13010252],
        [ 0.40337482,  1.91711807, -0.34286496],
        [ 0.60139322,  2.33379507,  0.68017292],
        [ 0.38164863,  2.39520025, -0.03980179],
        [ 0.58757985,  2.40746474,  0.74685657],
        [ 0.35690209,  2.4712019 , -0.0131978 ],
        [ 0.62364292,  2.50747752,  0.5745905 ],
        [ 0.46788502,  2.58453369, -0.33536303]]])
test_pose_2 =  np.array([[[ 0.70729446,  0.53888661, -1.29776835],
        [ 0.73365742,  0.47712949, -1.24505436],
        [ 0.74538976,  0.47668749, -1.24392426],
        [ 0.75680029,  0.47527298, -1.24392426],
        [ 0.69019759,  0.46485573, -1.3104763 ],
        [ 0.67004311,  0.45444152, -1.3104763 ],
        [ 0.651559  ,  0.44212759, -1.3104403 ],
        [ 0.75428915,  0.47414786, -0.84129083],
        [ 0.60184109,  0.41509297, -1.14608085],
        [ 0.70668215,  0.5966084 , -1.13230371],
        [ 0.66148549,  0.58957344, -1.22108114],
        [ 0.74578941,  0.69304127, -0.46725971],
        [ 0.373411  ,  0.67488599, -0.93437642],
        [ 0.77743006,  1.08698869, -0.19290945],
        [ 0.28726944,  1.04611754, -0.88764906],
        [ 0.77752244,  1.36670709, -0.38459474],
        [ 0.25161272,  1.4219873 , -0.86696434],
        [ 0.79523087,  1.46490443, -0.41576028],
        [ 0.21956551,  1.53694654, -0.91131675],
        [ 0.76093131,  1.46981633, -0.49055108],
        [ 0.26254147,  1.55338275, -0.99668884],
        [ 0.74197036,  1.43114281, -0.42876559],
        [ 0.28370652,  1.51184237, -0.90497029],
        [ 0.63125724,  1.40513182,  0.17005327],
        [ 0.40839583,  1.39351499, -0.16435876],
        [ 0.60750419,  1.96996737,  0.15552264],
        [ 0.37777871,  2.00492692, -0.13154991],
        [ 0.55640191,  2.40101266,  0.70899379],
        [ 0.32234323,  2.48462939,  0.13033143],
        [ 0.53752124,  2.47681332,  0.7758832 ],
        [ 0.29651502,  2.56443167,  0.15321413],
        [ 0.56395739,  2.58165717,  0.61041749],
        [ 0.3956396 ,  2.68404531, -0.15648887]]])


def main():
    viz = poseviz.PoseViz(joint_names, joint_edges, viz_fps=100, queue_size=5, downscale=30, resolution=(680, 420))

    # Iterate over the frames of e.g. a video
    while True:
        # Update with pose 1
        update_start = time.time()
        frame = np.zeros([720, 1280, 3], np.uint8)
        viz.update(
            frame=frame,
            boxes=np.array([[10, 20, 100, 100]], np.float32),
            poses=1000*test_pose_1,
            camera=poseviz.Camera.from_fov(55, frame.shape[:2]),
            block=False
            )
        
        update_end = time.time()
        print('update time: ', update_end - update_start)
        
        # # Update with pose 2
        # frame = np.zeros([720, 1280, 3], np.uint8)
        # viz.update(
        #     frame=frame,
        #     boxes=np.array([[10, 20, 100, 100]], np.float32),
        #     poses=1000*test_pose_2,
        #     camera=poseviz.Camera.from_fov(55, frame.shape[:2]))


if __name__ == '__main__':
    main()
